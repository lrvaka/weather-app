{"version":3,"sources":["components/WeatherCards/WeatherCard/CompactWeatherCard/CompactWeatherCardInfo/CompactWeatherCardInfo.module.css","components/WeatherCards/WeatherCards.module.css","App.module.css","components/WeatherCards/WeatherCard/CompactWeatherCard/CompactWeatherCard.module.css","components/WeatherCards/WeatherCard/ExpandedWeatherCard/ExpandedWeatherCard.module.css","components/WeatherCards/WeatherCard/WeatherCardInfo/WeatherCardIcons/WeatherCardIcons.module.css","components/WeatherCards/WeatherCard/WeatherCardInfo/WeatherCardInfo.module.css","components/WeatherForm/WeatherForm.module.css","assets/animated/day.svg","assets/animated/cloudy-day-1.svg","assets/animated/cloudy-day-2.svg","assets/animated/rainy-1.svg","assets/animated/cloudy.svg","components/WeatherCards/WeatherCard/WeatherCardInfo/WeatherCardIcons/WeatherCardIcons.js","assets/static/question.svg","components/WeatherCards/WeatherCard/WeatherCardInfo/WeatherCardInfo.js","components/WeatherCards/WeatherCard/CompactWeatherCard/CompactWeatherCardInfo/CompactWeatherCardInfo.js","components/WeatherCards/WeatherCard/CompactWeatherCard/CompactWeatherCard.js","components/WeatherCards/WeatherCard/ExpandedWeatherCard/ExpandedWeatherCard.js","components/WeatherCards/WeatherCard/WeatherCard.js","components/WeatherCards/WeatherCards.js","components/WeatherForm/WeatherForm.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","WeatherCardIcons","props","icon","src","clearSky","alt","scatteredClouds","brokenClouds","lightRain","overcastClouds","WeatherCardInfo","disabled","div","layoutId","style","opacity","transition","ease","duration","console","log","children","CompactWeatherCardInfo","finalMax","max","maxList","i","weatherInfo","days","high","length","push","Math","maxHandler","finalMin","min","minList","low","minHandler","finalDate","value","tempDay","Date","setDate","getDate","getUTCMonth","getUTCDate","currentDateHandler","description","className","classes","Description","TempInfo","CompactWeatherCard","onClick","undefined","onExpand","whileHover","scale","whileTap","day","ExpandedWeatherCard","onCollapse","WeatherCard","useState","isExpanded","setIsExpanded","type","container","hidden","visible","delay","when","staggerChildren","item","y","WeatherCards","expandedDay","setCollapsedDay","initial","animate","variants","WeatherCardsContainer","city","country","ul","layout","map","forecast","key","WeatherForm","onSubmit","getWeather","name","placeholder","button","App","weather","setWeather","Fragment","AppContainer","e","preventDefault","CURRENT_DATES","day1","day2","day3","day4","day5","WEATHER_INFORMATION","target","elements","fetch","then","response","Object","keys","forEach","finalDay","toISOString","Error","status","json","list","FINAL_LIST","filter","dt_txt","substring","main","temp_max","temp_min","catch","error","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.5fc0508d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TempInfo\":\"CompactWeatherCardInfo_TempInfo__2V2hG\",\"Description\":\"CompactWeatherCardInfo_Description__179Mk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"WeatherCardsContainer\":\"WeatherCards_WeatherCardsContainer__GHTC9\",\"WeatherCards\":\"WeatherCards_WeatherCards__1MmtC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppContainer\":\"App_AppContainer__381b2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CompactWeatherCard\":\"CompactWeatherCard_CompactWeatherCard__1BW_Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ExpandedWeatherCard\":\"ExpandedWeatherCard_ExpandedWeatherCard__1r2zV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Icon\":\"WeatherCardIcons_Icon__617A6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TempInfo\":\"WeatherCardInfo_TempInfo__3EMNz\",\"Description\":\"WeatherCardInfo_Description__3IOwi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"City\":\"WeatherForm_City__3cjZ6\"};","export default __webpack_public_path__ + \"static/media/day.c33ef664.svg\";","export default __webpack_public_path__ + \"static/media/cloudy-day-1.213f9a41.svg\";","export default __webpack_public_path__ + \"static/media/cloudy-day-2.7fb7ecfc.svg\";","export default __webpack_public_path__ + \"static/media/rainy-1.44fb8223.svg\";","export default __webpack_public_path__ + \"static/media/cloudy.24f9a474.svg\";","import React from \"react\";\r\nimport clearSky from \"../../../../../assets/animated/day.svg\";\r\nimport scatteredClouds from \"../../../../../assets/animated/cloudy-day-1.svg\";\r\nimport brokenClouds from \"../../../../../assets/animated/cloudy-day-2.svg\";\r\nimport lightRain from \"../../../../../assets/animated/rainy-1.svg\";\r\nimport overcastClouds from \"../../../../../assets/animated/cloudy.svg\";\r\nimport questionMark from \"../../../../../assets/static/question.svg\";\r\nimport classes from \"./WeatherCardIcons.module.css\";\r\n\r\nconst WeatherCardIcons = (props) => {\r\n  let icon = null\r\n\r\n  switch (props.icon) {\r\n    case \"clear sky\":\r\n      icon = <img src={clearSky} alt=\"clear sky\" />;\r\n      break;\r\n    case \"scattered clouds\":\r\n      icon = <img src={scatteredClouds} alt=\"scattered clouds\" />;\r\n      break;\r\n    case \"few clouds\":\r\n      icon = <img src={scatteredClouds} alt=\"few clouds\" />;\r\n      break;\r\n    case \"broken clouds\":\r\n      icon = <img src={brokenClouds} alt=\"broken clouds\" />;\r\n      break;\r\n    case \"light rain\":\r\n      icon = <img src={lightRain} alt=\"light rain\" />;\r\n      break;\r\n    case \"overcast clouds\":\r\n      icon = <img src={overcastClouds} alt=\"overcast clouds\" />;\r\n      break;\r\n    default:\r\n      icon = (\r\n        null\r\n      );\r\n  }\r\n\r\n  \r\n  return icon;\r\n};\r\n\r\nexport default WeatherCardIcons;\r\n","export default __webpack_public_path__ + \"static/media/question.eb231cc7.svg\";","import React from \"react\";\r\nimport WeatherCardIcons from \"./WeatherCardIcons/WeatherCardIcons\";\r\n\r\nimport { motion } from \"framer-motion\";\r\nimport classes from \"./WeatherCardInfo.module.css\";\r\n// initial=\"hidden\" animate=\"visible\" variants={variants}\r\n\r\nconst WeatherCardInfo = (props) => {\r\n  \r\n  const variants = {\r\n    hidden: { opacity: 0 },\r\n    visible: { opacity: 1 },\r\n  };\r\n\r\n  const disabled = props.disabled\r\n  return (\r\n    <motion.div\r\n      layoutId=\"title\"\r\n      style={{ opacity: disabled ? 0.2 : 1}}\r\n      transition={{ ease: \"easeOut\", duration: 0.5}}\r\n      \r\n    >\r\n    {console.log(props.disabled)}\r\n      {props.children}\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default WeatherCardInfo;\r\n","import React from \"react\";\r\nimport WeatherCardIcons from '../../WeatherCardInfo/WeatherCardIcons/WeatherCardIcons'\r\nimport WeatherCardInfo from '../../WeatherCardInfo/WeatherCardInfo';\r\nimport classes from './CompactWeatherCardInfo.module.css';\r\n\r\n\r\nconst CompactWeatherCardInfo = (props) => {\r\n  const maxHandler = () => {\r\n    let max;\r\n    let maxList = [];\r\n    for (let i = 0; i < props.weatherInfo[props.days]?.high.length; i++) {\r\n      maxList.push(props.weatherInfo[props.days]?.high[i]);\r\n      max = Math.max(...maxList);\r\n    }\r\n    return max;\r\n  };\r\n\r\n  const minHandler = () => {\r\n    let min;\r\n    let minList = [];\r\n    for (let i = 0; i < props.weatherInfo[props.days]?.low.length; i++) {\r\n      minList.push(props.weatherInfo[props.days]?.low[i]);\r\n      min = Math.min(...minList);\r\n    }\r\n    return min;\r\n  };\r\n\r\n  const currentDateHandler = () => {\r\n    console.log(props.value);\r\n    let tempDay = new Date();\r\n    tempDay.setDate(tempDay.getDate() + props.value);\r\n    let month = tempDay.getUTCMonth() + 1;\r\n    let day = tempDay.getUTCDate();\r\n    let finalDate = month + \"/\" + day;\r\n    return finalDate;\r\n  };\r\n\r\n  let finalMax = maxHandler();\r\n  let finalMin = minHandler();\r\n  let finalDate = currentDateHandler();\r\n  return (\r\n    <WeatherCardInfo disabled={props.disabled} >\r\n      <h1>{finalDate}</h1>\r\n      <WeatherCardIcons icon={props.weatherInfo[props.days]?.description[0]} />\r\n      <div className={classes.Description}>\r\n        <p>{props.weatherInfo[props.days]?.description[0]}</p>\r\n      </div>\r\n      <div className={classes.TempInfo}>\r\n        <h4>\r\n          <strong>Hi: </strong>\r\n\r\n          {finalMax ? finalMax + \"°F\" : null}\r\n        </h4>\r\n        <h4>\r\n          <strong>Lo: </strong>\r\n\r\n          {finalMin ? finalMin + \"°F\" : null}\r\n        </h4>\r\n      </div>\r\n    </WeatherCardInfo>\r\n  );\r\n};\r\n\r\nexport default CompactWeatherCardInfo;\r\n","import React from \"react\";\r\nimport classes from \"./CompactWeatherCard.module.css\";\r\nimport WeatherCardInfo from '../WeatherCardInfo/WeatherCardInfo';\r\nimport CompactWeatherCardInfo from './CompactWeatherCardInfo/CompactWeatherCardInfo';\r\nimport {motion} from \"framer-motion\";\r\n\r\nconst CompactWeatherCard = (props) => {\r\n  return(\r\n  <motion.div\r\n    onClick={props.disabled ? undefined : props.onExpand}\r\n    layoutId={props.layoutId}\r\n    whileHover={{ scale: 1.1 }}\r\n    style={{ opacity: props.disabled  ? 0.2 : 1, opacity: props.disabled  ? 0.2 : 1, opacity: props.disabled  ? 0.2 : 1}}\r\n    whileTap={{ scale: 1.1 }}\r\n    className={classes.CompactWeatherCard}\r\n  >\r\n    <CompactWeatherCardInfo\r\n      weatherInfo={props.weatherInfo}\r\n      days={props.day}\r\n      value={props.value}\r\n      disabled={props.disabled}\r\n    />\r\n  </motion.div>\r\n  )\r\n};\r\n\r\nexport default CompactWeatherCard;\r\n","import React from \"react\";\r\nimport classes from \"./ExpandedWeatherCard.module.css\";\r\nimport WeatherCardInfo from \"../WeatherCardInfo/WeatherCardInfo\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst ExpandedWeatherCard = (props) => {\r\n  return (\r\n    <motion.div\r\n      onClick={props.onCollapse}\r\n      layoutId={props.layoutId}\r\n      style={{ opacity: props.disabled  ? 0.2 : 1}}\r\n      className={classes.ExpandedWeatherCard}\r\n    >\r\n      Apples\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default ExpandedWeatherCard;\r\n","import React, {useState} from \"react\";\r\n\r\nimport CompactWeatherCard from \"./CompactWeatherCard/CompactWeatherCard\";\r\nimport ExpandedWeatherCard from \"./ExpandedWeatherCard/ExpandedWeatherCard\";\r\nimport { motion, AnimateSharedLayout, AnimatePresence } from \"framer-motion\";\r\n\r\nconst WeatherCard = (props) => {\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n\r\n  const collapseDate = () => {\r\n    setIsExpanded(false);\r\n    props.onCollapse();\r\n  };\r\n\r\n  const expandDate = () => {\r\n    setIsExpanded(true);\r\n    props.onExpand();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AnimateSharedLayout type=\"crossfade\" >\r\n      <AnimatePresence>\r\n        {isExpanded ? (\r\n          <ExpandedWeatherCard\r\n          layoutId={props.day}\r\n            onCollapse={collapseDate}\r\n            weatherInfo={props.weatherInfo}\r\n            value={props.value}\r\n            day={props.day}\r\n          />\r\n        ) : (\r\n          <CompactWeatherCard\r\n            layoutId={props.day}\r\n            onExpand={expandDate}\r\n            disabled={props.disabled}\r\n            weatherInfo={props.weatherInfo}\r\n            value={props.value}\r\n            day={props.day}\r\n          />\r\n        )}\r\n        </AnimatePresence>\r\n      </AnimateSharedLayout>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherCard;\r\n","import React, { useState } from \"react\";\r\nimport WeatherCard from \"./WeatherCard/WeatherCard\";\r\nimport classes from \"./WeatherCards.module.css\";\r\nimport { motion, AnimateSharedLayout } from \"framer-motion\";\r\n\r\nconst container = {\r\n  hidden: { opacity: 0, scale: 0 },\r\n  visible: {\r\n    opacity: 1,\r\n    scale: 1,\r\n    transition: {\r\n      delay: 0.3,\r\n      when: \"beforeChildren\",\r\n      staggerChildren: 0.1,\r\n      \r\n    },\r\n  },\r\n};\r\n\r\nconst item = {\r\n  hidden: { y: 20, opacity: 0 },\r\n  visible: {\r\n    y: 0,\r\n    opacity: 1,\r\n  },\r\n};\r\n\r\nconst days = [\r\n  { day: \"day2\", value: 1 },\r\n  { day: \"day3\", value: 2 },\r\n  { day: \"day4\", value: 3 },\r\n];\r\n\r\nconst WeatherCards = (props) => {\r\n  const [expandedDay, setCollapsedDay] = useState();\r\n\r\n  return (\r\n    <motion.div\r\n      initial=\"hidden\"\r\n      animate=\"visible\"\r\n      transition={{ ease: \"easeOut\", duration: 1 }}\r\n      variants={container}\r\n      className={classes.WeatherCardsContainer}\r\n    >\r\n      <h1>\r\n        {props.weatherInfo.city ? props.weatherInfo.city + \", \" : \"City, \"}\r\n        {props.weatherInfo.country ? props.weatherInfo.country : \"Country\"}\r\n      </h1>\r\n      \r\n      <motion.ul className={classes.WeatherCards} variants={item} layout>\r\n        {days.map((forecast) => (\r\n         \r\n            <WeatherCard\r\n              value={forecast.value}\r\n              key={forecast.day}\r\n              day={forecast.day}\r\n              disabled={\r\n                expandedDay !== forecast.day && expandedDay !== undefined\r\n              }\r\n              weatherInfo={props.weatherInfo}\r\n              onExpand={() => setCollapsedDay(forecast.day)}\r\n              onCollapse={() => setCollapsedDay()}\r\n            />\r\n          \r\n        ))}\r\n      </motion.ul>\r\n      \r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default WeatherCards;\r\n","import React from \"react\";\r\nimport classes from \"./WeatherForm.module.css\";\r\nimport {motion} from \"framer-motion\";\r\n\r\nconst WeatherForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.getWeather}>\r\n      <input type=\"text\" name=\"city\" placeholder=\"city\" />\r\n      <input type=\"text\" name=\"country\" placeholder=\"country\" />\r\n      <motion.button whileHover={{ scale: 1.1 }}>Search</motion.button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default WeatherForm;\r\n","import React from \"react\";\nimport classes from \"./App.module.css\";\nimport { useState } from \"react\";\nimport { motion } from \"framer-motion\";\n\n//`https://api.openweathermap.org/data/2.5/forecast?q=${city},${country}&units=imperial&appid=5672e526c1cbc8d71aed230e5e151426`\nimport WeatherCards from \"./components/WeatherCards/WeatherCards\";\nimport WeatherForm from \"./components/WeatherForm/WeatherForm\";\n\nfunction App() {\n  const [weather, setWeather] = useState([]);\n\n  function fetchData(e) {\n    e.preventDefault();\n    const CURRENT_DATES = {\n      //Used to compare between current date and date received from API JSON object\n      day1: \"\",\n      day2: \"\",\n      day3: \"\",\n      day4: \"\",\n      day5: \"\",\n    };\n    const currentDateHandler = () => {\n      let i = 0; // needed to manipulate and iterate the getDate function\n      let days = Object.keys(CURRENT_DATES); // = [ day1, day2, day3, day4, day5]\n      days.forEach((e) => {\n        let tempDay = new Date();\n        tempDay.setDate(tempDay.getDate() + i);\n        let finalDay = tempDay.toISOString();\n        CURRENT_DATES[e] = finalDay;\n        i++;\n      });\n      console.log(CURRENT_DATES);\n    };\n    const WEATHER_INFORMATION = {\n      day1: {\n        high: [],\n        low: [],\n        description: [],\n      },\n      day2: {\n        high: [],\n        low: [],\n        description: [],\n      },\n      day3: {\n        high: [],\n        low: [],\n        description: [],\n      },\n      day4: {\n        high: [],\n        low: [],\n        description: [],\n      },\n      day5: {\n        high: [],\n        low: [],\n        description: [],\n      },\n    };\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value;\n    fetch(\n      `https://api.openweathermap.org/data/2.5/forecast?q=${city},${country}&units=imperial&appid=5672e526c1cbc8d71aed230e5e151426`\n    )\n      .then((response) => {\n        currentDateHandler();\n        if (response == null) {\n          throw new Error(\n            `Expected status 200 ok got status: ${response.status}`\n          );\n        }\n        return response.json();\n      })\n      .then((forecast) => {\n        if (forecast == null) {\n          return null;\n        }\n          \n        const list = forecast.list || [];\n        const city = forecast.city.name;\n        const country = forecast.city.country;\n        console.log(forecast);\n        console.log(list);\n        let days = Object.keys(WEATHER_INFORMATION);\n        const finalListHandler = () => {\n          list.filter((item) => {\n            // filter out null objects\n            if (!item) {\n              return false;\n            }\n            return days.forEach((e) => {\n              if (\n                item.dt_txt.substring(0, 10) ===\n                CURRENT_DATES[e].substring(0, 10)\n              ) {\n                WEATHER_INFORMATION[e][\"high\"].push(item.main.temp_max);\n                WEATHER_INFORMATION[e][\"low\"].push(item.main.temp_min);\n                if (item.dt_txt.substring(11, 20) === \"12:00:00\") {\n                  WEATHER_INFORMATION[e][\"description\"].push(\n                    item.weather[0].description\n                  );\n                  console.log(item.weather[0].description);\n                }\n              }\n            });\n          });\n          return WEATHER_INFORMATION;\n        };\n        const FINAL_LIST = finalListHandler();\n        setWeather({\n          ...FINAL_LIST,\n          city: city,\n          country: country,\n        });\n      }).catch(error => {\n        console.error('Error:', error);\n      });;\n  }\n\n  return (\n    <React.Fragment>\n      <div className={classes.AppContainer}>\n        <h3>3-Day Forecast</h3>\n        <WeatherForm getWeather={fetchData} />\n          <WeatherCards weatherInfo={weather} />\n        {console.log(weather)}\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}